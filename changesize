-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Store original pet data
local originalData = {}

-- GUI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "PetSizeWeightChanger"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 340, 0, 300)
frame.Position = UDim2.new(0.5, -170, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(118, 61, 25) -- ZeoHub brown
frame.BorderSizePixel = 0
frame.Name = "PetSizeFrame"
frame.Parent = gui

-- Wooden tiled background
local bg = Instance.new("ImageLabel")
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundTransparency = 1
bg.Image = "rbxassetid://15910695828"
bg.ScaleType = Enum.ScaleType.Tile
bg.TileSize = UDim2.new(0, 64, 0, 64)
bg.Parent = frame

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

local stroke = Instance.new("UIStroke")
stroke.Color = Color3.fromRGB(80, 40, 20) -- darker stroke
stroke.Thickness = 2
stroke.Parent = frame

-- Top Bar
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 36)
topBar.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
topBar.BorderSizePixel = 0
topBar.Parent = frame

local topBarCorner = Instance.new("UICorner")
topBarCorner.CornerRadius = UDim.new(0, 12)
topBarCorner.Parent = topBar

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -80, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.FredokaOne
title.TextSize = 20
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Text = "Pet Weight Changer V2"
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = topBar

-- Minimize Button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 28, 0, 28)
minimizeBtn.Position = UDim2.new(1, -64, 0.5, -14)
minimizeBtn.BackgroundTransparency = 1
minimizeBtn.Text = "â€”"
minimizeBtn.Font = Enum.Font.FredokaOne
minimizeBtn.TextSize = 22
minimizeBtn.TextColor3 = Color3.fromRGB(255, 200, 80)
minimizeBtn.Parent = topBar

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 28, 0, 28)
closeBtn.Position = UDim2.new(1, -32, 0.5, -14)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.FredokaOne
closeBtn.TextSize = 22
closeBtn.TextColor3 = Color3.fromRGB(255, 90, 90)
closeBtn.Parent = topBar

-- Content Frame
local content = Instance.new("Frame")
content.Size = UDim2.new(1, -20, 1, -50)
content.Position = UDim2.new(0, 10, 0, 40)
content.BackgroundTransparency = 1
content.Name = "Content"
content.Parent = frame

-- Pet Info Label
local petInfoLabel = Instance.new("TextLabel")
petInfoLabel.Size = UDim2.new(1, 0, 0, 28)
petInfoLabel.Position = UDim2.new(0, 0, 0, 0)
petInfoLabel.BackgroundTransparency = 1
petInfoLabel.Font = Enum.Font.FredokaOne
petInfoLabel.TextSize = 18
petInfoLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
petInfoLabel.Text = "No pet equipped"
petInfoLabel.TextXAlignment = Enum.TextXAlignment.Center
petInfoLabel.Parent = content

-- Input Box
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(1, 0, 0, 40)
inputBox.Position = UDim2.new(0, 0, 0, 40)
inputBox.PlaceholderText = "Enter Weight (1 - 1000)"
inputBox.Font = Enum.Font.FredokaOne
inputBox.TextSize = 18
inputBox.TextColor3 = Color3.fromRGB(230, 230, 230)
inputBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
inputBox.Parent = content

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 8)
inputCorner.Parent = inputBox

-- Function to create ZeoHub-style buttons with hover glow
local function createButton(text, yPos, color)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 40)
    btn.Position = UDim2.new(0, 0, 0, yPos)
    btn.BackgroundColor3 = color
    btn.Text = text
    btn.Font = Enum.Font.FredokaOne
    btn.TextSize = 18
    btn.TextColor3 = Color3.fromRGB(240, 240, 240)
    btn.AutoButtonColor = false

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = btn

    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(40, 120, 60) -- green accent
    stroke.Thickness = 1.5
    stroke.Parent = btn

    -- Hover glow overlay
    local glow = Instance.new("Frame")
    glow.Size = UDim2.new(1, 0, 1, 0)
    glow.BackgroundColor3 = Color3.fromRGB(160, 255, 160)
    glow.BackgroundTransparency = 0.7
    glow.ZIndex = btn.ZIndex - 1
    glow.ClipsDescendants = true
    glow.Parent = btn
    Instance.new("UICorner", glow).CornerRadius = UDim.new(0, 8)

    btn.MouseEnter:Connect(function()
        TweenService:Create(glow, TweenInfo.new(0.3), {BackgroundTransparency = 0.3}):Play()
        TweenService:Create(btn, TweenInfo.new(0.3), {BackgroundColor3 = color:Lerp(Color3.fromRGB(150, 255, 150), 0.2)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(glow, TweenInfo.new(0.3), {BackgroundTransparency = 0.7}):Play()
        TweenService:Create(btn, TweenInfo.new(0.3), {BackgroundColor3 = color}):Play()
    end)

    btn.Parent = content
    return btn
end

-- Buttons
local applyBtn = createButton("Apply Pet Weight", 90, Color3.fromRGB(110, 196, 99))
local resetBtn = createButton("Reset to Normal Weight", 140, Color3.fromRGB(180, 70, 70))

-- Footer
local footer = Instance.new("TextLabel")
footer.Size = UDim2.new(1, 0, 0, 20)
footer.Position = UDim2.new(0, 0, 1, -20)
footer.BackgroundTransparency = 1
footer.Font = Enum.Font.FredokaOne
footer.TextSize = 14
footer.TextColor3 = Color3.fromRGB(160, 160, 160)
footer.Text = "Tiktok: @lumeniax"
footer.TextXAlignment = Enum.TextXAlignment.Center
footer.Parent = content

-- ===== Minimize & Close with smooth tween =====
local minimized = false
local originalHeight = 300
local topBarHeight = 36
local tweenTime = 0.25

minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        TweenService:Create(frame, TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 340, 0, topBarHeight)
        }):Play()
        content.Visible = false
    else
        TweenService:Create(frame, TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 340, 0, originalHeight)
        }):Play()
        content.Visible = true
    end
end)

closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- ===== Dragging Logic =====
local UIS = game:GetService("UserInputService")
local dragging, dragStart, startPos

local function startDrag(input)
    dragging = true
    dragStart = input.Position
    startPos = frame.Position
    input.Changed:Connect(function()
        if input.UserInputState == Enum.UserInputState.End then
            dragging = false
        end
    end)
end

local function updateDrag(input)
    if dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end

topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        startDrag(input)
    end
end)

topBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        updateDrag(input)
    end
end)

UIS.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        updateDrag(input)
    end
end)

-- ===== Pet Logic =====
local function getEquippedPetTool()
    local char = player.Character or player.CharacterAdded:Wait()
    for _, tool in pairs(char:GetChildren()) do
        if tool:IsA("Tool") then
            return tool
        end
    end
    return nil
end

local function setPetSize(petTool, scale)
    if petTool:IsA("Model") then
        petTool:ScaleTo(scale)
    elseif petTool:IsA("Tool") then
        for _, obj in ipairs(petTool:GetChildren()) do
            if obj:IsA("Model") then
                obj:ScaleTo(scale)
            elseif obj:IsA("BasePart") then
                local mesh = obj:FindFirstChildOfClass("SpecialMesh")
                if mesh then
                    mesh.Scale = Vector3.new(scale, scale, scale)
                else
                    obj.Size = Vector3.new(scale, scale, scale)
                end
            end
        end
    end
end

local function updatePetNameWithWeight(tool, weight)
    local name = tool.Name
    if name:find("%[%d+%.?%d* KG%]") then
        tool.Name = name:gsub("%[%d+%.?%d* KG%]", string.format("[%.2f KG]", weight))
    else
        tool.Name = name .. string.format(" [%.2f KG]", weight)
    end
end

local function removeWeightFromName(name)
    return (name:gsub("%s*%[%d+%.?%d* KG%]", ""))
end

local function saveOriginalData(tool)
    if not originalData[tool] then
        local originalScale = 1
        for _, obj in ipairs(tool:GetChildren()) do
            if obj:IsA("BasePart") then
                local mesh = obj:FindFirstChildOfClass("SpecialMesh")
                if mesh then
                    originalScale = mesh.Scale.X
                else
                    originalScale = obj.Size.X
                end
                break
            end
        end
        local weight = tonumber(tool.Name:match("%[(%d+%.?%d*) KG%]")) or originalScale
        originalData[tool] = {
            scale = originalScale,
            weight = weight,
            name = removeWeightFromName(tool.Name),
            currentScale = originalScale,
            currentWeight = weight,
        }
    end
end

local function updatePetInfoLabel()
    local tool = getEquippedPetTool()
    if tool then
        saveOriginalData(tool)
        petInfoLabel.Text = tool.Name
    else
        petInfoLabel.Text = "No pet equipped"
    end
end

-- Apply Button
applyBtn.MouseButton1Click:Connect(function()
    local input = tonumber(inputBox.Text)
    if not input or input < 1 or input > 1000 then
        warn("âš  Enter a valid number between 1 and 1000.")
        return
    end
    local tool = getEquippedPetTool()
    if tool then
        saveOriginalData(tool)
        setPetSize(tool, input)
        updatePetNameWithWeight(tool, input)
        originalData[tool].currentScale = input
        originalData[tool].currentWeight = input
        updatePetInfoLabel()
    else
        warn("No equipped pet tool found.")
    end
end)

-- Reset Button
resetBtn.MouseButton1Click:Connect(function()
    local tool = getEquippedPetTool()
    if tool and originalData[tool] then
        local orig = originalData[tool]
        setPetSize(tool, orig.scale)
        tool.Name = orig.name
        originalData[tool].currentScale = orig.scale
        originalData[tool].currentWeight = orig.weight
        updatePetInfoLabel()
    else
        warn("No original data saved for current pet or no pet equipped.")
    end
end)

-- Auto-update pet label
task.spawn(function()
    while gui.Parent do
        task.wait(0.3)
        updatePetInfoLabel()
    end
end)
